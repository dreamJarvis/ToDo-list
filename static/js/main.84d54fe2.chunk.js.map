{"version":3,"sources":["components/todos.js","components/forms.js","App.js","reportWebVitals.js","reducers/rootReducer.js","index.js"],"names":["Todos","list","this","props","todos","map","todo","className","content","href","onClick","deleteTaskFromStore","id","Component","connect","state","dispatch","type","Forms","hangleChange","e","setState","target","value","handleSubmit","preventDefault","newId","Math","random","addPost","onSubmit","htmlFor","onChange","payload","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","rootReducer","action","todoList","filter","persistedState","localStorage","getItem","JSON","parse","store","createStore","subscribe","setItem","stringify","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84d54fe2.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nclass Todos extends Component{\n    // render : a place to do js\n    render(){\n        const list = this.props.todos ? \n        (\n            this.props.todos.map((todo)=>{\n                return(\n                    <div className=\"card-panel hoverable blue-grey lighten-3\" key={todo.id}>\n                        <div className=\"card-content white-text center-align\">\n                            <span className=\"flow-text left-align\">{todo.content}</span>\n                            <a href=\"#!\" className=\"btn-floating btn-medium waves-effect waves-light red right deleteItem\" onClick={()=>{ this.props.deleteTaskFromStore(todo.id)}}>\n                                <i className=\"material-icons\">delete</i>\n                            </a>\n                        </div>\n                    </div>\n                )\n            })\n        )\n        :\n        (\n            <div className=\"card-panel red lighten-3\">\n                <div className=\"card-content white-text center-align\">\n                    <span className=\"flow-text left-align\">No Task Added</span>\n                </div>\n            </div>\n        );\n\n        return(\n            <div className=\"container todoList\">\n                {list}\n            </div>\n        )\n    }\n}\n\n// get posts from the redux-store\nconst mapStateToProps = (state)=>{\n    return {\n        todos: state.todos\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        deleteTaskFromStore: (id) =>{ dispatch({\n            type: 'DELETE_POST',\n            id : id\n        })}\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nclass Forms extends Component {\n    state = {\n        content: '',\n        id:null\n    }\n\n    hangleChange = (e)=>{\n        this.setState({\n            content: e.target.value\n        });\n    }\n\n    handleSubmit = (e)=>{\n        e.preventDefault();\n        const newId = (Math.random()*10);\n\n        // setState() is an asynchronous function, .'. we need a callback\n        this.setState({\n            id:newId\n        }, ()=>{\n            this.props.addPost(this.state);\n\n            // initiates below code only when the content is added to the list\n            // setting the value of input bar == \"\"\n            this.setState({\n                content:''\n            })\n        });       \n    }   \n\n    render(){\n        return(\n            <div className=\"container row formField center-align\">\n                <form className=\"col s12\" onSubmit={this.handleSubmit}>\n                    <div className=\"row\">\n                        <div className=\"input-field col s11\">\n                            <label htmlFor=\"task\" >Add todo</label>\n                            <input id=\"task\" type=\"text\" className=\"validate\" onChange={this.hangleChange} value={this.state.content}/>\n                        </div>\n                        <div className=\"addBtn col s1\">\n                            <a href=\"#!\" className=\"btn-floating btn-med waves-effect waves-light grey left addBtn\" onClick={this.handleSubmit}>\n                                <i className=\"material-icons left\">add</i>\n                            </a>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    // addPost() will be added to the props of this component\n    return{\n        addPost: (state)=>{\n            dispatch({\n                type: 'ADD_POST',\n                payload: state\n            })\n        }\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Forms);","import React, {Component} from 'react';\nimport Todos from './components/todos';\nimport Forms from './components/forms';\nimport './App.css'\n// import {connect} from 'react-redux';\n\n\nclass App extends Component {\n\tstate = {\n\t\tcontent:''\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<div className=\"App container\">\n\t\t\t\t<h1 className=\"center blue-text\">TODO List</h1>\n\t\t\t\t<div className=\"row\" >\n\t\t\t\t\t<div className=\"col s12 bufferZone\"></div>\n\t\t\t\t</div>\n\t\t\t\t<Forms/>\n\t\t\t\t<Todos/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// initial state\nconst initState = {\n    todos: []\n}\n\n// state : depicts the state of the store\n// action: it is the request made by the user on the store\nconst rootReducer = (state = initState, action)=>{\n    if(action.type === 'ADD_POST'){\n        const todos = state.todos ? ([...state.todos, action.payload]):([ action.payload]);\n\n        // updating state\n        return{\n            ...state,\n            todos:todos\n        }\n    }\n\n    if(action.type === 'DELETE_POST'){\n        const todoList = state.todos.filter((todo) => todo.id !== action.id);\n\n        // updating state\n        return{\n            ...state,\n            todos:todoList\n        }\n    }\n\n    return state;\n}\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport rootReducer from './reducers/rootReducer';\n\n// creatig a redux store\nconst persistedState = localStorage.getItem('task') ? JSON.parse(localStorage.getItem('task')) : {};\n\nconst store = createStore(\n\trootReducer,\n\tpersistedState\n);\n\n// it is called when ther is change in store current state\nstore.subscribe(()=>{\n\tlocalStorage.setItem('task', JSON.stringify(store.getState()));\n});\n\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}